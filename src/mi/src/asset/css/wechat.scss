$direction:(r:'right', l:'left', t:'top', b:'bottom');
$paddingLength:(-40,0,6,10,12,14,15,18,20, 22,24,25, 26, 28,30,32,33,34,35,40, 45, 50, 55,58,60,74, 80, 90,92, 100,110,120,130,150,180,195,280,310,380,400);
$fontSize:(12,13,14,16,18,20,22,24, 26,28,30, 32,40, 48);
$fontWeight:(400, 500, 600, 700, 800,bold,bolder);
$radius:(4,8,10, 14,25,60, 120,circle);
$colors:(bbb:#bbb,666:#666,aaa:#aaa,AEB6C6:#AEB6C6,E34D59:#E34D59,E8ECF6:#E8ECF6,A6B6DE:#A6B6DE,F2F2F2:#F2F2F2,E3C280:#E3C280,C99135:#C99135,838894:#838894, 232425:#232425, fff:#fff, E0E4F2:#E0E4F2, 1C2D59:#1C2D59,40527E:#40527E, F3F5FA:#F3F5FA,E8E9EE:#E8E9EE,transparent:transparent);
$borderColor:(E8E9EE:#E8E9EE, fff:#fff,E0E4F2:#E0E4F2);
$borderSize:(1);
$lineHeight:(34,40, 46,48,50,54,80,84,90, 100,120);
$overflow:(scroll, hidden);
$flexShrink:(0, 1);
$flexWrap:(wrap:wrap,nowrap:keep-all);
$wordBreak:(keepAll:keep-all,breakAll:break-all);
$height:(fit-content, 100vh,100,50vh,60vh,70vh,80vh);
$width:(fit-content, 100vw,20,30,70, 80,100);
$h:(2,5,10,12,15,20,22,25,30,40,44, 50, 54,60,62,64,74,80,84,90,92,100, 120,124,150,180,190,200,220, 280,300, 310,345,500,530,560,570, 700,740, 946);
$display:(flex, block, none,inline-block);
$justify:(start:flex-start, center:center, between:space-between,end:flex-end);
$boxSizing:(border-box);
$bgRepeat:(repeat, no-repeat);
$bgSize:(30);
$position:(relative, absolute,fixed);
$border:(1, 2);
$left:(50:50%);
$opacity:(0,49,70);
$flexDirecation:(row,column);
$textDirection:(left,center,right);
$positionDistance:(-60,-40,-25,-15,0,5,10,11,12,13,14,15,16,17,20,22,23,24,25,26,30,40,50,55,60,70,90,100,106,110,120,180,200,280,310,370,380,400);
$zIndex:(1,9,99,100,999);
@each $key,
$value in $justify {
    .justify-content-#{$key} {
        justify-content: $value
    }
    .align-items-#{$key} {
        align-items: $value
    }
}

@each $k,
$v in $left {
    .left-#{$k} {
        left: $v
    }
}
@each $k,$v in $flexWrap{
    .flex-#{$k}{
       flex-wrap: $v;
    }
}
@each $k,$v in $wordBreak{
    .word-#{$k}{
       word-break: $v;
    }
}
@each $i in $zIndex{
    .zIndex-#{$i}{
       z-index: $i;
    }
}
@each $i in $bgSize{
    .bgs-#{$i}{
        background-size:($i)+ rpx;
    }
}
@each $i in $textDirection{
    .text-#{$i}{
        text-align: $i;
    }
}
@each $i in $display {
    .d-#{$i} {
        display: $i
    }
}

@each $i in $position {
    .#{$i} {
        position: $i
    }
}
@each $i in $positionDistance {
    .bottom-#{$i} {
        bottom: ($i)+ rpx
    }
    .top-#{$i} {
        top: ($i)+ rpx
    }
    .left-#{$i} {
        left: ($i)+ rpx
    }
    .right-#{$i} {
        right: ($i)+ rpx
    }
}


@each $i in $opacity {
    .opacity-#{$i} {
        opacity: $i*0.01;
    }
}

@each $i in $bgRepeat {
    .bg-#{$i} {
        background-repeat: $i
    }
}

@each $i in $paddingLength {
    .margin-#{$i} {
        margin: ($i)+rpx;
    }
    .padding-#{$i} {
        padding: ($i)+rpx;
    }
    .m-#{$i} {
        margin: ($i)+rpx;
    }
    .m-t-#{$i} {
        margin-top: ($i)+rpx;
    }
    .m-b-#{$i} {
        margin-bottom: ($i)+rpx;
    }
    .m-l-#{$i} {
        margin-left: ($i)+rpx;
    }
    .m-r-#{$i} {
        margin-right: ($i)+rpx;
    }
    .p-#{$i} {
        padding: ($i)+rpx;
    }
    .p-x-#{$i} {
        padding-left: ($i)+rpx;
        padding-right: ($i)+rpx;
    }
    .p-y-#{$i} {
        padding-top: ($i)+rpx;
        padding-bottom: ($i)+rpx;
    }
    .m-x-#{$i} {
        margin-left: ($i)+rpx;
        margin-right: ($i)+rpx;
    }
    .m-y-#{$i} {
        margin-top: ($i)+rpx;
        margin-bottom: ($i)+rpx;
    }
    .p-t-#{$i} {
        padding-top: ($i)+rpx;
    }
    .p-b-#{$i} {
        padding-bottom: ($i)+rpx;
    }
    .p-l-#{$i} {
        padding-left: ($i)+rpx;
    }
    .p-r-#{$i} {
        padding-right: ($i)+rpx;
    }
}

@each $i in $boxSizing {
    .#{$i} {
        box-sizing: ($i)
    }
}

@each $i in $fontSize {
    .fz-#{$i} {
        font-size: ($i)+rpx;
    }
}

// fw-500
@each $i in $fontWeight {
    .fw-#{$i} {
        font-weight: ($i);
    }
}

@each $i in $lineHeight {
    .lh-#{$i} {
        line-height: ($i)+rpx;
    }
}

@each $i in $height {
    @if $i==100 {
        .height-#{$i} {
            height: $i*1%
        }
        
    }
    @else {
        .height-#{$i} {
            height: $i
        }
        .min-height-#{$i} {
            min-height: ($i)
        }
    }
}

@each $i in $width {
    @if $i==100 {
        .width-#{$i} {
            width: $i*1%
        }
    } @else if $i==80 {
        .width-#{$i} {
            width: $i*1%
        }
    }  @else if $i==70 {
        .width-#{$i} {
            width: $i*1%
        } 
    }
    @else if $i==30 {
            .width-#{$i} {
                width: $i*1%
            }
    } @else {
        .width-#{$i} {
            width: $i
        }
        
    }
}

// h-90
@each $i in $h {
    .h-#{$i} {
        height: ($i)+rpx
    }
    .min-height-#{$i} {
        min-height: ($i)+rpx
    }
    .w-#{$i} {
        width: ($i)+rpx
    }
    .max-width-#{$i} {
        max-width: ($i)+rpx
     }
     .max-height-#{$i} {
        max-height: ($i)+rpx
     }
}

// .radius-10
@each $i in $radius {
    @if $i==circle {
        .radius-#{$i} {
            border-radius: 50%;
        }
    }
    @else {
        .radius-#{$i} {
            border-radius: ($i)+rpx
        }
    }
}

// border-bottom-212121
@each $c,
$color in $borderColor {
    .border-#{$c} {
        border: 1rpx solid $color;
    }
    @each $i,
    $v in $direction {
       
        @if $v==bottom {
            .border-#{$v}-#{$c} {
                border-bottom: 1rpx solid $color;
            }
        }
        @if $v==top {
            .border-#{$v}-#{$c} {
                border-top: 1rpx solid $color;
            }
        }
        @if $v==left {
            .border-#{$v}-#{$c} {
                border-left: 1rpx solid $color;
            }
        }
        @if $v==right {
            .border-#{$v}-#{$c} {
                border-right: 1rpx solid $color;
            }
        }
    }
}

@each $i in $flexShrink {
    .flex-shink-#{$i} {
        flex-shrink: ($i);
    }
}
@each $var in $flexDirecation {
    .flex-#{$var}{
        flex-direction: $var;
    }
}
// .bgc-fff
// fc-40527E
@each $name,
$color in $colors {
    @if $name==transparent {
        .bgc-transparent {
            background-color: $color;
        }
    }
    @else {
        .fc-#{$name} {
            color: $color;
        }
        .bgc-#{$name} {
            background-color: $color;
        }
    }
}

@each $i in $overflow {
    .overflow {
        overflow: ($i);
    }
    .overflow-x-#{$i} {
        overflow: ($i);
    }
    .overflow-y-#{$i} {
        overflow: ($i);
    }
}

@each $i in $flexShrink {
    .flex-shink-#{$i} {
        flex-shrink: ($i);
    }
}



@each $i in $overflow {
    .overflow {
        overflow: ($i);
    }
    .overflow-x-#{$i} {
        overflow: ($i);
    }
    .overflow-y-#{$i} {
        overflow: ($i);
    }
}

// @mixin backgroundSize($x,$y) {
//    background-size: $x $y;
// }
@each $i in $border {
    .border-#{$i} {
        border: ($i)+rpx solid #E8E9EE;
    }
}

button::after {
    display: none;
}
# Functions
check_and_start_service() {
    local service_name=$1
    local service_command=$2
    local service_pid=$(ps aux|grep "${service_name}"|grep -v grep|awk '{print $2}')
    if [ -z "$service_pid" ]; then
        echo "$service_name not running, now start."
        eval "$service_command"
    else
        echo "$service_name is running, pid: $service_pid"
        if [[ "$service_name" == *.jar ]]; then
            response=$(curl http://localhost:8888/actuator/health)
            if [[ "$response" == *"UP"* ]]; then
                echo "Server run successful, response: $response, service name: $service_name"
            else
                echo "Server check failed(pid exists, but not response), service name: $service_name"
                eval "$service_command"
            fi
        fi
    fi
}

# Prepare
script_dir=$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)
echo "Script dir: ${script_dir}, will goto there."
cd ${script_dir}

deploy_type=$1
app_jar_name=$(ls -rt target/*.jar|grep jar|tail -1)
app_jar_name=${app_jar_name:-"target/mp-server.jar"}
java_pid=$(ps aux|grep ${app_jar_name}|grep -v grep|awk '{print $2}')
java_param="-Dfile.encoding=utf-8"
java_param="${java_param} -Xms256m -Xmx2048m -XX:NewSize=64m -XX:MaxNewSize=64m"
java_param="${java_param} -Ddubbo.application.logger=slf4j -Djava.security.egd=file:/dev/./urandom -Dspring.profiles.active=prd"
java_tail="--spring.config.location=./application-prd.yml"
java_command="java ${java_param} -jar ${app_jar_name} ${java_tail}"
nohup_java_command="nohup ${java_command} >/dev/null 2>&1 &"

# Set default java version to 17
if [[ " java all check " =~ " ${deploy_type} " ]]; then
    java_path=$(which java)
    if [ -z "$java_path" ]; then
        echo "Java is not installed."
    else
        java_version=$("$java_path" -version 2>&1 | awk -F '"' '/version/ {print $2}')
    fi
    if ! [[ "$java_version" == 17* ]]; then
        echo "Java 17 is not installed. Current version: $java_version, now try to find java 17."
        # sdk use java 17.0.8-zulu
        JAVA_DIRS=("${HOME}/.sdkman/candidates/java/17.0.8-zulu" "${HOME}/.sdkman/candidates/java/current")
        for dir in "${JAVA_DIRS[@]}"; do
            if [ -d "${dir}" ]; then
                echo "${dir} exists."
                export JAVA_HOME=${dir}
                export PATH=${JAVA_HOME}/bin:$PATH
                java_version=$(java -version 2>&1 | awk -F '"' '/version/ {print $2}')
                break
            fi
        done
    fi
    echo "Java version is: ${java_version}"
fi

# Check firewalld、mysqld、java、ssh、ssl status
if [[ " check " =~ " ${deploy_type} " ]]; then
    echo "================ Check start ================"
    echo "Check firewalld、mysqld、java、ssh、ssl status, now: $(date)"
    if command -v systemctl >/dev/null 2>&1; then
        if systemctl is-active --quiet firewalld; then
            echo "Firewalld is running. Stopping and disabling it."
            sudo systemctl stop firewalld
            sudo systemctl disable firewalld
        else
            echo "Firewalld is not running."
        fi
    else
        echo "systemctl is not installed."
    fi
    check_and_start_service "mysqld" "systemctl start mysqld"
    check_and_start_service "${app_jar_name}" "${nohup_java_command}"
    check_and_start_service "natapp -authtoken=ad9867e9379e1139" "nohup ./natapp -authtoken=ad9867e9379e1139 >/dev/null 2>&1 &"
    check_and_start_service "natapp -authtoken=e31a7c7ff0de2c14" "nohup ./natapp -authtoken=e31a7c7ff0de2c14 >/dev/null 2>&1 &"
    echo "================ Check end ================"
fi

# Git pull
if [[ " java all " =~ " ${deploy_type} " ]]; then
    git pull origin master
fi

# Deploy java
if [[ " java all " =~ " ${deploy_type} " ]]; then
# Package by mvn
    if command -v mvn >/dev/null 2>&1; then
        echo "Maven(mvn) is installed and executable."
    else
        echo "Maven(mvn) is not installed."
        MAVEN_DIRS=("${HOME}/.sdkman/candidates/maven/3.8.3" "/opt/apache-maven-3.8.8")
        for dir in "${MAVEN_DIRS[@]}"; do
            if [ -d "${dir}" ]; then
                echo "${dir} exists."
                export MAVEN_HOME=${dir}
                export PATH=${MAVEN_HOME}/bin:$PATH
                break
            fi
        done
    fi
    mvn clean package -DskipTests
    java_pid=$(ps aux|grep ${app_jar_name}|grep -v grep|awk '{print $2}')
    if ! [ "${java_pid}" == "" ]; then
        echo "${app_jar_name} is running, now kill pid: ${java_pid}, then run."
        kill ${java_pid} && kill -9 ${java_pid}
    fi
    echo "${app_jar_name} not run, now start, command: ${java_command}"
    eval ${nohup_java_command}
fi

# Deploy page, package in local, sftp to server, then execute ssh command
if [[ " page " =~ " ${deploy_type} " ]]; then
    cd ./static
    rm -rf industry
    cd ../src/page
    yarn industry-java-build
    cd ../../static
    zip -r industry.zip industry
    scp -P 33333 industry.zip root@67566b8ce6980156.natapp.cc:/opt/douson/mp-server/static/
    ls -lh | grep industry
    rm -rf industry.zip
    ls -lh | grep industry
    cd ../
fi

